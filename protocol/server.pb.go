// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusType int32

const (
	StatusType_Invalid StatusType = 0
	StatusType_OK      StatusType = 1
	StatusType_Error   StatusType = 2
)

var StatusType_name = map[int32]string{
	0: "Invalid",
	1: "OK",
	2: "Error",
}
var StatusType_value = map[string]int32{
	"Invalid": 0,
	"OK":      1,
	"Error":   2,
}

func (x StatusType) String() string {
	return proto.EnumName(StatusType_name, int32(x))
}
func (StatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{0}
}

type ChannelType int32

const (
	ChannelType_IQ      ChannelType = 0
	ChannelType_SmartIQ ChannelType = 1
)

var ChannelType_name = map[int32]string{
	0: "IQ",
	1: "SmartIQ",
}
var ChannelType_value = map[string]int32{
	"IQ":      0,
	"SmartIQ": 1,
}

func (x ChannelType) String() string {
	return proto.EnumName(ChannelType_name, int32(x))
}
func (ChannelType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{1}
}

type DeviceType int32

const (
	DeviceType_DeviceInvalid     DeviceType = 0
	DeviceType_DeviceTestSignal  DeviceType = 1
	DeviceType_DeviceAirspyOne   DeviceType = 2
	DeviceType_DeviceAirspyHf    DeviceType = 3
	DeviceType_DeviceRtlsdr      DeviceType = 4
	DeviceType_DeviceLimeSDRUSB  DeviceType = 5
	DeviceType_DeviceLimeSDRMini DeviceType = 6
	DeviceType_DeviceSpyServer   DeviceType = 7
	DeviceType_DeviceHackRF      DeviceType = 8
)

var DeviceType_name = map[int32]string{
	0: "DeviceInvalid",
	1: "DeviceTestSignal",
	2: "DeviceAirspyOne",
	3: "DeviceAirspyHf",
	4: "DeviceRtlsdr",
	5: "DeviceLimeSDRUSB",
	6: "DeviceLimeSDRMini",
	7: "DeviceSpyServer",
	8: "DeviceHackRF",
}
var DeviceType_value = map[string]int32{
	"DeviceInvalid":     0,
	"DeviceTestSignal":  1,
	"DeviceAirspyOne":   2,
	"DeviceAirspyHf":    3,
	"DeviceRtlsdr":      4,
	"DeviceLimeSDRUSB":  5,
	"DeviceLimeSDRMini": 6,
	"DeviceSpyServer":   7,
	"DeviceHackRF":      8,
}

func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{2}
}

type LoginData struct {
	Token                string   `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginData) Reset()         { *m = LoginData{} }
func (m *LoginData) String() string { return proto.CompactTextString(m) }
func (*LoginData) ProtoMessage()    {}
func (*LoginData) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{0}
}
func (m *LoginData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginData.Unmarshal(m, b)
}
func (m *LoginData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginData.Marshal(b, m, deterministic)
}
func (dst *LoginData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginData.Merge(dst, src)
}
func (m *LoginData) XXX_Size() int {
	return xxx_messageInfo_LoginData.Size(m)
}
func (m *LoginData) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginData.DiscardUnknown(m)
}

var xxx_messageInfo_LoginData proto.InternalMessageInfo

func (m *LoginData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type IQData struct {
	Timestamp            uint64      `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Status               StatusType  `protobuf:"varint,2,opt,name=status,proto3,enum=protocol.StatusType" json:"status,omitempty"`
	Error                string      `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	Type                 ChannelType `protobuf:"varint,4,opt,name=Type,proto3,enum=protocol.ChannelType" json:"Type,omitempty"`
	Samples              []float32   `protobuf:"fixed32,5,rep,packed,name=Samples,proto3" json:"Samples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IQData) Reset()         { *m = IQData{} }
func (m *IQData) String() string { return proto.CompactTextString(m) }
func (*IQData) ProtoMessage()    {}
func (*IQData) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{1}
}
func (m *IQData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IQData.Unmarshal(m, b)
}
func (m *IQData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IQData.Marshal(b, m, deterministic)
}
func (dst *IQData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IQData.Merge(dst, src)
}
func (m *IQData) XXX_Size() int {
	return xxx_messageInfo_IQData.Size(m)
}
func (m *IQData) XXX_DiscardUnknown() {
	xxx_messageInfo_IQData.DiscardUnknown(m)
}

var xxx_messageInfo_IQData proto.InternalMessageInfo

func (m *IQData) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *IQData) GetStatus() StatusType {
	if m != nil {
		return m.Status
	}
	return StatusType_Invalid
}

func (m *IQData) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *IQData) GetType() ChannelType {
	if m != nil {
		return m.Type
	}
	return ChannelType_IQ
}

func (m *IQData) GetSamples() []float32 {
	if m != nil {
		return m.Samples
	}
	return nil
}

type ChannelConfig struct {
	LoginInfo            *LoginData `protobuf:"bytes,1,opt,name=LoginInfo,proto3" json:"LoginInfo,omitempty"`
	CenterFrequency      uint32     `protobuf:"varint,2,opt,name=CenterFrequency,proto3" json:"CenterFrequency,omitempty"`
	DecimationStage      uint32     `protobuf:"varint,3,opt,name=DecimationStage,proto3" json:"DecimationStage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ChannelConfig) Reset()         { *m = ChannelConfig{} }
func (m *ChannelConfig) String() string { return proto.CompactTextString(m) }
func (*ChannelConfig) ProtoMessage()    {}
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{2}
}
func (m *ChannelConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelConfig.Unmarshal(m, b)
}
func (m *ChannelConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelConfig.Marshal(b, m, deterministic)
}
func (dst *ChannelConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelConfig.Merge(dst, src)
}
func (m *ChannelConfig) XXX_Size() int {
	return xxx_messageInfo_ChannelConfig.Size(m)
}
func (m *ChannelConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelConfig proto.InternalMessageInfo

func (m *ChannelConfig) GetLoginInfo() *LoginData {
	if m != nil {
		return m.LoginInfo
	}
	return nil
}

func (m *ChannelConfig) GetCenterFrequency() uint32 {
	if m != nil {
		return m.CenterFrequency
	}
	return 0
}

func (m *ChannelConfig) GetDecimationStage() uint32 {
	if m != nil {
		return m.DecimationStage
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{3}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type PingData struct {
	Timestamp            uint64   `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingData) Reset()         { *m = PingData{} }
func (m *PingData) String() string { return proto.CompactTextString(m) }
func (*PingData) ProtoMessage()    {}
func (*PingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{4}
}
func (m *PingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingData.Unmarshal(m, b)
}
func (m *PingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingData.Marshal(b, m, deterministic)
}
func (dst *PingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingData.Merge(dst, src)
}
func (m *PingData) XXX_Size() int {
	return xxx_messageInfo_PingData.Size(m)
}
func (m *PingData) XXX_DiscardUnknown() {
	xxx_messageInfo_PingData.DiscardUnknown(m)
}

var xxx_messageInfo_PingData proto.InternalMessageInfo

func (m *PingData) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PingData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type HelloData struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Application          string   `protobuf:"bytes,2,opt,name=Application,proto3" json:"Application,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloData) Reset()         { *m = HelloData{} }
func (m *HelloData) String() string { return proto.CompactTextString(m) }
func (*HelloData) ProtoMessage()    {}
func (*HelloData) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{5}
}
func (m *HelloData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloData.Unmarshal(m, b)
}
func (m *HelloData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloData.Marshal(b, m, deterministic)
}
func (dst *HelloData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloData.Merge(dst, src)
}
func (m *HelloData) XXX_Size() int {
	return xxx_messageInfo_HelloData.Size(m)
}
func (m *HelloData) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloData.DiscardUnknown(m)
}

var xxx_messageInfo_HelloData proto.InternalMessageInfo

func (m *HelloData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HelloData) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *HelloData) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *HelloData) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type HelloReturn struct {
	Status               StatusType `protobuf:"varint,1,opt,name=Status,proto3,enum=protocol.StatusType" json:"Status,omitempty"`
	Login                *LoginData `protobuf:"bytes,2,opt,name=Login,proto3" json:"Login,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *HelloReturn) Reset()         { *m = HelloReturn{} }
func (m *HelloReturn) String() string { return proto.CompactTextString(m) }
func (*HelloReturn) ProtoMessage()    {}
func (*HelloReturn) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{6}
}
func (m *HelloReturn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReturn.Unmarshal(m, b)
}
func (m *HelloReturn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReturn.Marshal(b, m, deterministic)
}
func (dst *HelloReturn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReturn.Merge(dst, src)
}
func (m *HelloReturn) XXX_Size() int {
	return xxx_messageInfo_HelloReturn.Size(m)
}
func (m *HelloReturn) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReturn.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReturn proto.InternalMessageInfo

func (m *HelloReturn) GetStatus() StatusType {
	if m != nil {
		return m.Status
	}
	return StatusType_Invalid
}

func (m *HelloReturn) GetLogin() *LoginData {
	if m != nil {
		return m.Login
	}
	return nil
}

type VersionData struct {
	Major                uint32   `protobuf:"varint,1,opt,name=Major,proto3" json:"Major,omitempty"`
	Minor                uint32   `protobuf:"varint,2,opt,name=Minor,proto3" json:"Minor,omitempty"`
	Hash                 uint32   `protobuf:"varint,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionData) Reset()         { *m = VersionData{} }
func (m *VersionData) String() string { return proto.CompactTextString(m) }
func (*VersionData) ProtoMessage()    {}
func (*VersionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{7}
}
func (m *VersionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionData.Unmarshal(m, b)
}
func (m *VersionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionData.Marshal(b, m, deterministic)
}
func (dst *VersionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionData.Merge(dst, src)
}
func (m *VersionData) XXX_Size() int {
	return xxx_messageInfo_VersionData.Size(m)
}
func (m *VersionData) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionData.DiscardUnknown(m)
}

var xxx_messageInfo_VersionData proto.InternalMessageInfo

func (m *VersionData) GetMajor() uint32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *VersionData) GetMinor() uint32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *VersionData) GetHash() uint32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type DeviceInfo struct {
	DeviceType           DeviceType `protobuf:"varint,1,opt,name=DeviceType,proto3,enum=protocol.DeviceType" json:"DeviceType,omitempty"`
	DeviceSerial         string     `protobuf:"bytes,2,opt,name=DeviceSerial,proto3" json:"DeviceSerial,omitempty"`
	DeviceName           string     `protobuf:"bytes,3,opt,name=DeviceName,proto3" json:"DeviceName,omitempty"`
	MaximumSampleRate    uint32     `protobuf:"varint,4,opt,name=MaximumSampleRate,proto3" json:"MaximumSampleRate,omitempty"`
	MaximumGain          uint32     `protobuf:"varint,5,opt,name=MaximumGain,proto3" json:"MaximumGain,omitempty"`
	MaximumDecimation    uint32     `protobuf:"varint,6,opt,name=MaximumDecimation,proto3" json:"MaximumDecimation,omitempty"`
	MinimumFrequency     uint32     `protobuf:"varint,7,opt,name=MinimumFrequency,proto3" json:"MinimumFrequency,omitempty"`
	MaximumFrequency     uint32     `protobuf:"varint,8,opt,name=MaximumFrequency,proto3" json:"MaximumFrequency,omitempty"`
	ADCResolution        uint32     `protobuf:"varint,9,opt,name=ADCResolution,proto3" json:"ADCResolution,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeviceInfo) Reset()         { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()    {}
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{8}
}
func (m *DeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInfo.Unmarshal(m, b)
}
func (m *DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInfo.Marshal(b, m, deterministic)
}
func (dst *DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfo.Merge(dst, src)
}
func (m *DeviceInfo) XXX_Size() int {
	return xxx_messageInfo_DeviceInfo.Size(m)
}
func (m *DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfo proto.InternalMessageInfo

func (m *DeviceInfo) GetDeviceType() DeviceType {
	if m != nil {
		return m.DeviceType
	}
	return DeviceType_DeviceInvalid
}

func (m *DeviceInfo) GetDeviceSerial() string {
	if m != nil {
		return m.DeviceSerial
	}
	return ""
}

func (m *DeviceInfo) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *DeviceInfo) GetMaximumSampleRate() uint32 {
	if m != nil {
		return m.MaximumSampleRate
	}
	return 0
}

func (m *DeviceInfo) GetMaximumGain() uint32 {
	if m != nil {
		return m.MaximumGain
	}
	return 0
}

func (m *DeviceInfo) GetMaximumDecimation() uint32 {
	if m != nil {
		return m.MaximumDecimation
	}
	return 0
}

func (m *DeviceInfo) GetMinimumFrequency() uint32 {
	if m != nil {
		return m.MinimumFrequency
	}
	return 0
}

func (m *DeviceInfo) GetMaximumFrequency() uint32 {
	if m != nil {
		return m.MaximumFrequency
	}
	return 0
}

func (m *DeviceInfo) GetADCResolution() uint32 {
	if m != nil {
		return m.ADCResolution
	}
	return 0
}

type ServerInfoData struct {
	ControlAllowed           bool         `protobuf:"varint,1,opt,name=ControlAllowed,proto3" json:"ControlAllowed,omitempty"`
	ServerCenterFrequency    uint32       `protobuf:"varint,2,opt,name=ServerCenterFrequency,proto3" json:"ServerCenterFrequency,omitempty"`
	MinimumIQCenterFrequency uint32       `protobuf:"varint,3,opt,name=MinimumIQCenterFrequency,proto3" json:"MinimumIQCenterFrequency,omitempty"`
	MaximumIQCenterFrequency uint32       `protobuf:"varint,4,opt,name=MaximumIQCenterFrequency,proto3" json:"MaximumIQCenterFrequency,omitempty"`
	MinimumSmartFrequency    uint32       `protobuf:"varint,5,opt,name=MinimumSmartFrequency,proto3" json:"MinimumSmartFrequency,omitempty"`
	MaximumSmartFrequency    uint32       `protobuf:"varint,6,opt,name=MaximumSmartFrequency,proto3" json:"MaximumSmartFrequency,omitempty"`
	DeviceInfo               *DeviceInfo  `protobuf:"bytes,7,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	Version                  *VersionData `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}     `json:"-"`
	XXX_unrecognized         []byte       `json:"-"`
	XXX_sizecache            int32        `json:"-"`
}

func (m *ServerInfoData) Reset()         { *m = ServerInfoData{} }
func (m *ServerInfoData) String() string { return proto.CompactTextString(m) }
func (*ServerInfoData) ProtoMessage()    {}
func (*ServerInfoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{9}
}
func (m *ServerInfoData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfoData.Unmarshal(m, b)
}
func (m *ServerInfoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfoData.Marshal(b, m, deterministic)
}
func (dst *ServerInfoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfoData.Merge(dst, src)
}
func (m *ServerInfoData) XXX_Size() int {
	return xxx_messageInfo_ServerInfoData.Size(m)
}
func (m *ServerInfoData) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfoData.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfoData proto.InternalMessageInfo

func (m *ServerInfoData) GetControlAllowed() bool {
	if m != nil {
		return m.ControlAllowed
	}
	return false
}

func (m *ServerInfoData) GetServerCenterFrequency() uint32 {
	if m != nil {
		return m.ServerCenterFrequency
	}
	return 0
}

func (m *ServerInfoData) GetMinimumIQCenterFrequency() uint32 {
	if m != nil {
		return m.MinimumIQCenterFrequency
	}
	return 0
}

func (m *ServerInfoData) GetMaximumIQCenterFrequency() uint32 {
	if m != nil {
		return m.MaximumIQCenterFrequency
	}
	return 0
}

func (m *ServerInfoData) GetMinimumSmartFrequency() uint32 {
	if m != nil {
		return m.MinimumSmartFrequency
	}
	return 0
}

func (m *ServerInfoData) GetMaximumSmartFrequency() uint32 {
	if m != nil {
		return m.MaximumSmartFrequency
	}
	return 0
}

func (m *ServerInfoData) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *ServerInfoData) GetVersion() *VersionData {
	if m != nil {
		return m.Version
	}
	return nil
}

type MeData struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Application          string   `protobuf:"bytes,2,opt,name=Application,proto3" json:"Application,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
	ControlAllowed       bool     `protobuf:"varint,5,opt,name=ControlAllowed,proto3" json:"ControlAllowed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeData) Reset()         { *m = MeData{} }
func (m *MeData) String() string { return proto.CompactTextString(m) }
func (*MeData) ProtoMessage()    {}
func (*MeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{10}
}
func (m *MeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeData.Unmarshal(m, b)
}
func (m *MeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeData.Marshal(b, m, deterministic)
}
func (dst *MeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeData.Merge(dst, src)
}
func (m *MeData) XXX_Size() int {
	return xxx_messageInfo_MeData.Size(m)
}
func (m *MeData) XXX_DiscardUnknown() {
	xxx_messageInfo_MeData.DiscardUnknown(m)
}

var xxx_messageInfo_MeData proto.InternalMessageInfo

func (m *MeData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MeData) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *MeData) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *MeData) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MeData) GetControlAllowed() bool {
	if m != nil {
		return m.ControlAllowed
	}
	return false
}

type ByeReturn struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByeReturn) Reset()         { *m = ByeReturn{} }
func (m *ByeReturn) String() string { return proto.CompactTextString(m) }
func (*ByeReturn) ProtoMessage()    {}
func (*ByeReturn) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2ca4d234e6f66bad, []int{11}
}
func (m *ByeReturn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByeReturn.Unmarshal(m, b)
}
func (m *ByeReturn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByeReturn.Marshal(b, m, deterministic)
}
func (dst *ByeReturn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByeReturn.Merge(dst, src)
}
func (m *ByeReturn) XXX_Size() int {
	return xxx_messageInfo_ByeReturn.Size(m)
}
func (m *ByeReturn) XXX_DiscardUnknown() {
	xxx_messageInfo_ByeReturn.DiscardUnknown(m)
}

var xxx_messageInfo_ByeReturn proto.InternalMessageInfo

func (m *ByeReturn) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginData)(nil), "protocol.LoginData")
	proto.RegisterType((*IQData)(nil), "protocol.IQData")
	proto.RegisterType((*ChannelConfig)(nil), "protocol.ChannelConfig")
	proto.RegisterType((*Empty)(nil), "protocol.Empty")
	proto.RegisterType((*PingData)(nil), "protocol.PingData")
	proto.RegisterType((*HelloData)(nil), "protocol.HelloData")
	proto.RegisterType((*HelloReturn)(nil), "protocol.HelloReturn")
	proto.RegisterType((*VersionData)(nil), "protocol.VersionData")
	proto.RegisterType((*DeviceInfo)(nil), "protocol.DeviceInfo")
	proto.RegisterType((*ServerInfoData)(nil), "protocol.ServerInfoData")
	proto.RegisterType((*MeData)(nil), "protocol.MeData")
	proto.RegisterType((*ByeReturn)(nil), "protocol.ByeReturn")
	proto.RegisterEnum("protocol.StatusType", StatusType_name, StatusType_value)
	proto.RegisterEnum("protocol.ChannelType", ChannelType_name, ChannelType_value)
	proto.RegisterEnum("protocol.DeviceType", DeviceType_name, DeviceType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RadioServerClient is the client API for RadioServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RadioServerClient interface {
	Me(ctx context.Context, in *LoginData, opts ...grpc.CallOption) (*MeData, error)
	Hello(ctx context.Context, in *HelloData, opts ...grpc.CallOption) (*HelloReturn, error)
	Bye(ctx context.Context, in *LoginData, opts ...grpc.CallOption) (*ByeReturn, error)
	ServerInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServerInfoData, error)
	SmartIQ(ctx context.Context, in *ChannelConfig, opts ...grpc.CallOption) (RadioServer_SmartIQClient, error)
	IQ(ctx context.Context, in *ChannelConfig, opts ...grpc.CallOption) (RadioServer_IQClient, error)
	Ping(ctx context.Context, in *PingData, opts ...grpc.CallOption) (*PingData, error)
}

type radioServerClient struct {
	cc *grpc.ClientConn
}

func NewRadioServerClient(cc *grpc.ClientConn) RadioServerClient {
	return &radioServerClient{cc}
}

func (c *radioServerClient) Me(ctx context.Context, in *LoginData, opts ...grpc.CallOption) (*MeData, error) {
	out := new(MeData)
	err := c.cc.Invoke(ctx, "/protocol.RadioServer/Me", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *radioServerClient) Hello(ctx context.Context, in *HelloData, opts ...grpc.CallOption) (*HelloReturn, error) {
	out := new(HelloReturn)
	err := c.cc.Invoke(ctx, "/protocol.RadioServer/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *radioServerClient) Bye(ctx context.Context, in *LoginData, opts ...grpc.CallOption) (*ByeReturn, error) {
	out := new(ByeReturn)
	err := c.cc.Invoke(ctx, "/protocol.RadioServer/Bye", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *radioServerClient) ServerInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServerInfoData, error) {
	out := new(ServerInfoData)
	err := c.cc.Invoke(ctx, "/protocol.RadioServer/ServerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *radioServerClient) SmartIQ(ctx context.Context, in *ChannelConfig, opts ...grpc.CallOption) (RadioServer_SmartIQClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RadioServer_serviceDesc.Streams[0], "/protocol.RadioServer/SmartIQ", opts...)
	if err != nil {
		return nil, err
	}
	x := &radioServerSmartIQClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RadioServer_SmartIQClient interface {
	Recv() (*IQData, error)
	grpc.ClientStream
}

type radioServerSmartIQClient struct {
	grpc.ClientStream
}

func (x *radioServerSmartIQClient) Recv() (*IQData, error) {
	m := new(IQData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *radioServerClient) IQ(ctx context.Context, in *ChannelConfig, opts ...grpc.CallOption) (RadioServer_IQClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RadioServer_serviceDesc.Streams[1], "/protocol.RadioServer/IQ", opts...)
	if err != nil {
		return nil, err
	}
	x := &radioServerIQClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RadioServer_IQClient interface {
	Recv() (*IQData, error)
	grpc.ClientStream
}

type radioServerIQClient struct {
	grpc.ClientStream
}

func (x *radioServerIQClient) Recv() (*IQData, error) {
	m := new(IQData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *radioServerClient) Ping(ctx context.Context, in *PingData, opts ...grpc.CallOption) (*PingData, error) {
	out := new(PingData)
	err := c.cc.Invoke(ctx, "/protocol.RadioServer/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RadioServerServer is the server API for RadioServer service.
type RadioServerServer interface {
	Me(context.Context, *LoginData) (*MeData, error)
	Hello(context.Context, *HelloData) (*HelloReturn, error)
	Bye(context.Context, *LoginData) (*ByeReturn, error)
	ServerInfo(context.Context, *Empty) (*ServerInfoData, error)
	SmartIQ(*ChannelConfig, RadioServer_SmartIQServer) error
	IQ(*ChannelConfig, RadioServer_IQServer) error
	Ping(context.Context, *PingData) (*PingData, error)
}

func RegisterRadioServerServer(s *grpc.Server, srv RadioServerServer) {
	s.RegisterService(&_RadioServer_serviceDesc, srv)
}

func _RadioServer_Me_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadioServerServer).Me(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RadioServer/Me",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadioServerServer).Me(ctx, req.(*LoginData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RadioServer_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadioServerServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RadioServer/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadioServerServer).Hello(ctx, req.(*HelloData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RadioServer_Bye_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadioServerServer).Bye(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RadioServer/Bye",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadioServerServer).Bye(ctx, req.(*LoginData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RadioServer_ServerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadioServerServer).ServerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RadioServer/ServerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadioServerServer).ServerInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RadioServer_SmartIQ_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ChannelConfig)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RadioServerServer).SmartIQ(m, &radioServerSmartIQServer{stream})
}

type RadioServer_SmartIQServer interface {
	Send(*IQData) error
	grpc.ServerStream
}

type radioServerSmartIQServer struct {
	grpc.ServerStream
}

func (x *radioServerSmartIQServer) Send(m *IQData) error {
	return x.ServerStream.SendMsg(m)
}

func _RadioServer_IQ_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ChannelConfig)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RadioServerServer).IQ(m, &radioServerIQServer{stream})
}

type RadioServer_IQServer interface {
	Send(*IQData) error
	grpc.ServerStream
}

type radioServerIQServer struct {
	grpc.ServerStream
}

func (x *radioServerIQServer) Send(m *IQData) error {
	return x.ServerStream.SendMsg(m)
}

func _RadioServer_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadioServerServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RadioServer/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadioServerServer).Ping(ctx, req.(*PingData))
	}
	return interceptor(ctx, in, info, handler)
}

var _RadioServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.RadioServer",
	HandlerType: (*RadioServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Me",
			Handler:    _RadioServer_Me_Handler,
		},
		{
			MethodName: "Hello",
			Handler:    _RadioServer_Hello_Handler,
		},
		{
			MethodName: "Bye",
			Handler:    _RadioServer_Bye_Handler,
		},
		{
			MethodName: "ServerInfo",
			Handler:    _RadioServer_ServerInfo_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _RadioServer_Ping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SmartIQ",
			Handler:       _RadioServer_SmartIQ_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "IQ",
			Handler:       _RadioServer_IQ_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_server_2ca4d234e6f66bad) }

var fileDescriptor_server_2ca4d234e6f66bad = []byte{
	// 991 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x66, 0xc6, 0xff, 0xe5, 0x75, 0x76, 0xd2, 0x49, 0x84, 0x65, 0x21, 0x14, 0x46, 0x80, 0xb2,
	0x61, 0xe5, 0x85, 0x2c, 0x02, 0x89, 0x03, 0x92, 0x13, 0xb3, 0xc4, 0x62, 0xbd, 0x9b, 0xb4, 0xb3,
	0xdc, 0x1b, 0xbb, 0xe3, 0x1d, 0x76, 0x3c, 0x33, 0xf4, 0x8c, 0xb3, 0xf8, 0xca, 0x43, 0x70, 0xe2,
	0x1d, 0x38, 0x73, 0xe7, 0x91, 0x78, 0x00, 0xba, 0xab, 0x7b, 0xdc, 0x63, 0x7b, 0x22, 0xc1, 0x61,
	0x4f, 0x76, 0x7d, 0xf5, 0x55, 0x75, 0x77, 0x7d, 0x35, 0xd5, 0x0d, 0x0f, 0x52, 0x2e, 0xee, 0xb8,
	0xe8, 0x27, 0x22, 0xce, 0x62, 0xd2, 0xc4, 0x9f, 0x69, 0x1c, 0xfa, 0x1f, 0x41, 0xeb, 0x79, 0x3c,
	0x0f, 0xa2, 0x21, 0xcb, 0x18, 0x39, 0x84, 0xda, 0x4d, 0xfc, 0x86, 0x47, 0x5d, 0xe7, 0xd8, 0x39,
	0x69, 0x51, 0x6d, 0xf8, 0x7f, 0x3a, 0x50, 0x1f, 0x5d, 0x23, 0xe1, 0x03, 0x68, 0xdd, 0x04, 0x0b,
	0x9e, 0x66, 0x6c, 0x91, 0x20, 0xa9, 0x4a, 0x2d, 0x40, 0x1e, 0x43, 0x5d, 0xfe, 0xc9, 0x96, 0x69,
	0xd7, 0x95, 0xae, 0xbd, 0xb3, 0xc3, 0x7e, 0xbe, 0x4c, 0x7f, 0x82, 0xf8, 0xcd, 0x2a, 0xe1, 0xd4,
	0x70, 0xd4, 0x62, 0xdf, 0x09, 0x11, 0x8b, 0x6e, 0x45, 0x2f, 0x86, 0x06, 0x79, 0x04, 0x55, 0xc5,
	0xea, 0x56, 0x31, 0xc3, 0x91, 0xcd, 0x70, 0xf1, 0x9a, 0x45, 0x11, 0x0f, 0x31, 0x05, 0x52, 0x48,
	0x17, 0x1a, 0x13, 0xb9, 0x6c, 0xc8, 0xd3, 0x6e, 0xed, 0xb8, 0x72, 0xe2, 0xd2, 0xdc, 0xf4, 0x7f,
	0x77, 0xa0, 0x63, 0xf8, 0x17, 0x71, 0x74, 0x1b, 0xcc, 0xc9, 0x17, 0xe6, 0x98, 0xa3, 0xe8, 0x36,
	0xc6, 0x8d, 0xb7, 0xcf, 0x0e, 0x6c, 0xee, 0x75, 0x05, 0xa8, 0x65, 0x91, 0x13, 0x78, 0x78, 0xc1,
	0xa3, 0x8c, 0x8b, 0x67, 0x82, 0xff, 0xb2, 0xe4, 0xd1, 0x74, 0x85, 0xc7, 0xea, 0xd0, 0x6d, 0x58,
	0x31, 0x87, 0x7c, 0x1a, 0x2c, 0x58, 0x16, 0xc4, 0x91, 0x3c, 0xe9, 0x9c, 0xe3, 0x99, 0x24, 0x73,
	0x0b, 0xf6, 0x1b, 0xf2, 0xcc, 0x8b, 0x24, 0x5b, 0xf9, 0xdf, 0x42, 0xf3, 0x2a, 0x88, 0xe6, 0xff,
	0xa1, 0xa8, 0x6b, 0x4d, 0xdc, 0xa2, 0x26, 0x2b, 0x68, 0x5d, 0xf2, 0x30, 0x8c, 0x31, 0x01, 0x81,
	0xea, 0x0b, 0xb6, 0xe0, 0x46, 0x35, 0xfc, 0x4f, 0x8e, 0xa1, 0x3d, 0x48, 0x92, 0x30, 0x98, 0xe2,
	0xea, 0x26, 0xb8, 0x08, 0x91, 0x1e, 0x34, 0x5f, 0xc9, 0xa6, 0x88, 0x54, 0xa4, 0x96, 0x60, 0x6d,
	0x2b, 0xdf, 0x15, 0x4b, 0xd3, 0xb7, 0xb1, 0x98, 0xa1, 0x12, 0xd2, 0x97, 0xdb, 0xfe, 0x2d, 0xb4,
	0x71, 0x69, 0xca, 0xb3, 0xa5, 0x88, 0x94, 0xe8, 0x5a, 0x5c, 0x5c, 0xfe, 0x5e, 0xd1, 0xf5, 0x7f,
	0x29, 0x6f, 0x0d, 0x2b, 0x8c, 0x1b, 0xba, 0x47, 0x03, 0xcd, 0xf0, 0xc7, 0xd0, 0xfe, 0x91, 0x8b,
	0x54, 0x6e, 0x35, 0xef, 0xcd, 0x31, 0xfb, 0x59, 0xb6, 0x8b, 0x83, 0xa5, 0xd5, 0x06, 0xa2, 0x41,
	0x24, 0x51, 0xd7, 0xa0, 0xca, 0x50, 0x05, 0xb9, 0x64, 0xe9, 0x6b, 0xa3, 0x02, 0xfe, 0xf7, 0x7f,
	0xab, 0x00, 0x0c, 0xf9, 0x5d, 0x30, 0xe5, 0xa8, 0xee, 0x97, 0xb9, 0x85, 0xdd, 0xb6, 0xb3, 0x75,
	0xeb, 0xa3, 0x05, 0x1e, 0xf1, 0xe1, 0x81, 0xb6, 0x26, 0x5c, 0x04, 0x2c, 0x34, 0x65, 0xdd, 0xc0,
	0xc8, 0x87, 0x79, 0xe6, 0x17, 0xb6, 0xb2, 0x05, 0x44, 0x16, 0x6c, 0x7f, 0xcc, 0x7e, 0x0d, 0x16,
	0xcb, 0x85, 0x6e, 0x57, 0xca, 0x32, 0xdd, 0xee, 0x1d, 0xba, 0xeb, 0x50, 0x3a, 0x1a, 0xf0, 0x7b,
	0x26, 0xcb, 0x56, 0x43, 0x5e, 0x11, 0x2a, 0xe4, 0xb3, 0xdd, 0xd6, 0xad, 0x6f, 0xe4, 0xb3, 0x0e,
	0x72, 0x0a, 0x9e, 0xac, 0x91, 0x02, 0x6d, 0x5b, 0x37, 0x90, 0xbc, 0x83, 0x23, 0x57, 0x27, 0xb0,
	0xdc, 0xa6, 0xe1, 0x6e, 0xe1, 0xe4, 0x63, 0xe8, 0x0c, 0x86, 0x17, 0x94, 0xa7, 0x71, 0xb8, 0xc4,
	0x1d, 0xb4, 0x90, 0xb8, 0x09, 0xfa, 0x7f, 0x55, 0x60, 0x6f, 0x82, 0x83, 0x48, 0x89, 0x80, 0xba,
	0x7e, 0x0a, 0x7b, 0xf2, 0x1b, 0xcd, 0x44, 0x1c, 0x0e, 0x64, 0x53, 0xbd, 0xe5, 0x33, 0x14, 0xa3,
	0x49, 0xb7, 0x50, 0x29, 0xd8, 0x91, 0x8e, 0x2c, 0xff, 0x28, 0xcb, 0x9d, 0xe4, 0x1b, 0xe8, 0x9a,
	0x63, 0x8d, 0xae, 0xb7, 0x03, 0x75, 0x77, 0xdc, 0xeb, 0xc7, 0x58, 0x7d, 0xcc, 0xdd, 0xd8, 0xaa,
	0x89, 0xbd, 0xc7, 0xaf, 0x76, 0x6b, 0xf2, 0x4e, 0x16, 0x4c, 0x64, 0x36, 0x50, 0x0b, 0x58, 0xee,
	0xc4, 0x28, 0xd3, 0x01, 0x9b, 0x51, 0x75, 0x13, 0x55, 0xe6, 0x54, 0xad, 0x3c, 0x5b, 0x37, 0x36,
	0x8a, 0xd9, 0xde, 0x6d, 0x65, 0xe5, 0xa3, 0x05, 0x1e, 0x79, 0x02, 0x8d, 0x3b, 0xfd, 0x79, 0xa1,
	0xa6, 0xed, 0xe2, 0xac, 0x2d, 0x7c, 0x77, 0x34, 0x67, 0xf9, 0x7f, 0xc8, 0x6b, 0x60, 0xcc, 0xdf,
	0xd1, 0xc0, 0x91, 0xb3, 0x7c, 0x30, 0x9b, 0x09, 0x9e, 0xa6, 0x66, 0xde, 0xe4, 0x66, 0x49, 0x7f,
	0xd4, 0xca, 0xfa, 0xc3, 0xff, 0x04, 0x5a, 0xe7, 0x2b, 0x6e, 0x86, 0x92, 0x4c, 0x37, 0x96, 0xc1,
	0x6a, 0x12, 0xeb, 0x3d, 0xe6, 0xe6, 0xe9, 0x63, 0x00, 0x3b, 0x96, 0x48, 0x1b, 0x1a, 0xa3, 0xe8,
	0x8e, 0x85, 0xc1, 0xcc, 0x7b, 0x8f, 0xd4, 0xc1, 0x7d, 0xf9, 0x83, 0xe7, 0x90, 0x96, 0xb9, 0x98,
	0x3c, 0xf7, 0xd4, 0x87, 0x76, 0xe1, 0xde, 0x51, 0x8c, 0xd1, 0xb5, 0x64, 0xca, 0x30, 0xd4, 0x40,
	0x1a, 0xce, 0xe9, 0xdf, 0x4e, 0x71, 0x94, 0x90, 0x7d, 0xe8, 0xe4, 0x15, 0xcf, 0x13, 0x1f, 0x82,
	0x67, 0x08, 0x72, 0xa6, 0x4f, 0x82, 0x79, 0xc4, 0x42, 0xb9, 0xcc, 0x81, 0xba, 0x35, 0x14, 0x3a,
	0x08, 0x44, 0x9a, 0xac, 0x5e, 0x46, 0xdc, 0x73, 0x65, 0x65, 0xf7, 0x8a, 0xe0, 0xe5, 0xad, 0x57,
	0x21, 0x5e, 0x3e, 0x74, 0x68, 0x16, 0xa6, 0x33, 0xe1, 0x55, 0x6d, 0xc2, 0xe7, 0xf2, 0x9a, 0x98,
	0x0c, 0xe9, 0xab, 0xc9, 0xb9, 0x57, 0x23, 0x47, 0xb0, 0xbf, 0x81, 0xaa, 0x1e, 0xf3, 0xea, 0x76,
	0x9d, 0x49, 0xb2, 0xd2, 0x1f, 0x89, 0xd7, 0xb0, 0x39, 0x2f, 0xd9, 0xf4, 0x0d, 0x7d, 0xe6, 0x35,
	0xcf, 0xfe, 0x71, 0xa1, 0x4d, 0xd9, 0x2c, 0x88, 0x35, 0x87, 0x7c, 0x06, 0xee, 0x98, 0x93, 0xb2,
	0x01, 0xdd, 0xf3, 0x2c, 0x68, 0x1a, 0xe2, 0x29, 0xd4, 0xf0, 0x4e, 0x28, 0xf2, 0xd7, 0xf7, 0x53,
	0xef, 0x68, 0x0b, 0x34, 0x22, 0x3d, 0x81, 0x8a, 0x54, 0xac, 0x7c, 0x89, 0x02, 0x68, 0x55, 0xfd,
	0x5a, 0x6a, 0xb7, 0x1e, 0x1e, 0xe4, 0xa1, 0xa5, 0xe0, 0x9d, 0xda, 0xeb, 0x16, 0x6e, 0x9e, 0xcd,
	0x19, 0xf3, 0xd5, 0x5a, 0x2f, 0xf2, 0xfe, 0xce, 0x8b, 0x42, 0xbf, 0x10, 0x8a, 0x87, 0xd2, 0x8f,
	0x9d, 0xcf, 0x1d, 0xf9, 0x6a, 0x70, 0xff, 0x6f, 0x48, 0x1f, 0xaa, 0xea, 0x62, 0x27, 0xc4, 0xfa,
	0xf2, 0x8b, 0xbe, 0x57, 0x82, 0x9d, 0x3f, 0x82, 0x83, 0x20, 0xee, 0xcf, 0x45, 0x32, 0xed, 0x0b,
	0x55, 0x7d, 0xfd, 0x4c, 0x3b, 0xf7, 0x0a, 0x52, 0x5c, 0xa9, 0xa0, 0x2b, 0xe7, 0xa7, 0x3a, 0x46,
	0x3f, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x05, 0xd3, 0x36, 0x3b, 0xcb, 0x09, 0x00, 0x00,
}
