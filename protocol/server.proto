syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.radioserver";
option java_outer_classname = "RadioServerProto";

package protocol;

enum DeviceType {
    DeviceInvalid = 0;
    DeviceTestSignal = 1;
    DeviceAirspyOne = 2;
    DeviceAirspyHf = 3;
    DeviceRtlsdr = 4;
    DeviceLimeSDRUSB = 5;
    DeviceLimeSDRMini = 6;
    DeviceSpyServer = 7;
    DeviceHackRF = 8;
}

message Session {
    string Token = 1;
}

message DeviceInfo {
    DeviceType DeviceType = 1;
    StreamConfig StreamConfig = 2;
    string Session = 3;
    string DeviceSerial = 4;
    string DeviceName = 5;
    uint32 MaximumSampleRate = 6;
    uint32 MaximumGain = 7;
    uint32 MaximumDecimation = 8;
    uint32 MinimumFrequency = 9;
    uint32 MaximumFrequency = 10;
    uint32 ADCResolution = 11;
    uint32 MaximumRXChannels = 12;
    uint32 MaximumTXChannels = 13;
}

message StreamConfig {
    ChannelConfig RXC = 1;
    ChannelConfig TXC = 2;
}

message ChannelConfig {
    uint32 CenterFrequency = 1;
    uint32 SampleRate = 2;
    uint32 Oversample = 3;
    uint32 NormalizedGain = 4;
    uint32 AnalogFilterBandwidth = 5;
    string Antenna = 6;
}

enum StatusType {
    Invalid  = 0;
    OK = 1;
    Error = 2;
}

message IQData {
    uint64 Timestamp = 1;
    StatusType status = 2;
    repeated float Samples = 4;
    string Error = 3;
}

//
//  Meta
//

message DeviceList {
    repeated DeviceInfo Devices = 1;
}

message Version {
    uint32 Major = 1;
    uint32 Minor = 2;
    uint32 Hash = 3;
}

message ServerInfoData {
    string Name = 1;
    Version Version = 2;
}

//
//  RadioServer Methods 
//

message Empty {}

service RadioServer {
    rpc List(Empty) returns (DeviceList);
    rpc Provision(DeviceInfo) returns (DeviceInfo);
    rpc Destroy(Session) returns (Empty);
    rpc ServerInfo(Empty) returns (ServerInfoData);
    rpc Tune(StreamConfig) returns (StreamConfig);
    rpc RXIQ(Session) returns (stream IQData);
}
